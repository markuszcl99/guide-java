
## & 位与运算
let num1 = 1 & 2;
println(num1); ## 期待是 0
## | 或运算
let num2 = 1 | 2;
println(num2); ## 期待是 3
## ^ 异或运算
let num3 = 1 ^ 2;
println(num3); ## 期待是 3（相同为0，不同为1）
let num4 = 1 ^ 3;
println(num4); ## 期待是 2
## ~ 一元非运算：按位取反，这里会涉及 原码、反码、补码之间的转换关系
let num5 = ~3;
println(num5);
## << 左移运算 （左移 n 位，计算相当于计算 number * 2^n ）
let num6 = 7 << 2;
let num7 = 3 << 1;
let negativeNumber = -7 << 1;
println(num6);
println(num7);
println(negativeNumber);
## >> 右移运算（右移 n 位，计算相当于计算 number / 2^n <向下取整>）
let num8 = 7 >> 1;
let num9 = 3 >> 1;
let negativeNumber1 = -7 >> 1;
println(num8);
println(num9);
println(negativeNumber1);
negativeNumber1 = -3 >> 1;
println(negativeNumber1);
## >>> 无符号右移
let num10 = 7 >>> 1 ;
println(num10);
num10 = -7 >>> 1; ## 目前 aviator 不支持 负数进行无符号右移，不支持的操作会返回 null
println(numb10);